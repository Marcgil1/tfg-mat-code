#! /usr/bin/python3
from bisect  import bisect_left
from pathlib import Path

import random

randomseed   = 10
numinstances = 3

numclients    = 30
numitems      = 15
maxnumbudgets = 10
maxbudget     = 20


def genprices():
    absbudgets = []
    for kdx in range(numclients):
        absbudgets += [
            random.randint(1, maxbudget)
        ]

    sabsdudgets = sorted(absbudgets)
    prices     = [sabsbudgets[0]]
    for idx in range(1, len(absbudgets)):
        if sabsbudgets[i] != sabsbudgets[i-1]:
            prices += [
                sabsbudgets[i]
            ]

    budgets = []
    for kdx in range(numclients):
        budgets += [
            bisect_left(prices, absbudgets[kdx])
        ]

    return len(prices), prices, budgets

def genprefs():
    return PREFERED, KWORSE

def geninstance():
    numprices, prices, budgets = genprices()
    PREFERED, KWORSE           = genprefs()

    return {
        'numclients': numclients,
        'numitems':   numitems,
        'numprices':  numprices,
        'PREFERED':   PREFERED,
        'KWORSE':     KWORSE,
        'prices':     prices,
        'budgets':    budgets
    }

def getoutdir(datadir):
    datapath = Path(datadir)

    dirs = [d for d in datapath.glob('*')]
    dirs = [d for d in dirs if d.is_dir()]
    dirs = [d.stem for d in dirs]
    dirs = sorted(dirs)
    
    outdir = int(dirs[-1]) + 1
    outdir = datapath / ('%0.2d' % outdir)
    outdir.mkdir()

    fds = []
    for idx in range(numinstances):
        instancefname = '%s/%0.2d.dat' % (outdir.stem,idx+1)
        fds          += [open(instancefname, 'w')]
        
    puts = []
    for idx in range(numinstances):
        puts += [
            lambda s: print(s, end='\n', file=fds[idx])
        ]
    return fds, puts

def printinstance(instance, put):
    put('param numclients := %d\n' % instance['numclients'])
    put('param numitems   := %d\n' % instance['numitems'])
    put('param numprices  := %d\n' % instance['numprices'])
    put('\n')

    put('set CLIENTS       := 1..numclients\n')
    put('set ITEMS         := 1..numitems\n')
    put('set PRICE_INDICES := 1..numprices\n')
    put('\n')

    for kdx in range(instance['numclients']):
        put('set PREFERED[%d] :=' % (kdx+1))
        for idx in instance['PREFERED'][kdx]:
            put(' %d' % (idx+1))
        put('\n')
    put('\n')

    for kdx in range(instance['numclients']):
        for idx in range(instance['numitems']):
            put('set KWORSE[%d,%d] :=' % (kdx+1,idx+1))
            for jdx in range(instance['KWORSE'][kdx,idx]):
                put(' %d' % (jdx+1))
            put('\n')
     put('\n')

     put('param prices :=')
     for ldx in range(instance['numprices']):
         ldxprice = instance['prices'][ldx]
         put('\n    %d %d' % (ldx+1,ldxprice))
     put(';\n\n')

     put('param budgets :=')
     for kdx in range(instance['numclients']):
         ldx = instance['budgets'][kdx]
         put('\n    %d %d' % (kdx+1, ldx+1)
     put(';\n\n')

if __name__ == '__main__':
    random.seed(randomseed)
    
    fds, puts = getoutdir('data')
    for put in puts:
        printinstance(
            geninstance(),
            puts[idx]
        )
    for fd in fds:
        fd.close()
